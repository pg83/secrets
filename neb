#!/usr/bin/env python3

import os
import sys
import contextlib
import subprocess

def it():
    cur = []

    for l in sys.stdin.read().split('\n'):
        if 'BEGIN NEB' in l:
            cur = [l]
        elif 'END NEB' in l:
            cur.append(l)
            yield '\n'.join(cur)
            cur = []
        else:
            cur.append(l)

parts = list(it())

@contextlib.contextmanager
def memfd(name):
    fd = os.memfd_create(name, flags=0)

    try:
        yield f'/proc/{os.getpid()}/fd/{fd}'
    finally:
        os.close(fd)

@contextlib.contextmanager
def multi(*args):
    with contextlib.ExitStack() as es:
        yield (es.enter_context(a) for a in args)

with multi(memfd('crt'), memfd('key')) as (crt, key):
    with open(crt, 'w') as f:
        f.write(parts[0])

    with open(key, 'w') as f:
        f.write(parts[1])

    subprocess.check_call(['nebula-cert', 'sign', '-ca-crt', crt, '-ca-key', key] + sys.argv[1:])

    with open('ca.crt', 'w') as f:
        f.write(parts[0])
